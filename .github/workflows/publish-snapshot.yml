name: Library Snapshot Deploy

on:
  push:
    branches-ignore: [ "main" ]
  workflow_dispatch:

env:
  GITHUB_USERNAME: "meetacy"
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
  ORG_GRADLE_PROJECT_snapshot: true
  ORG_GRADLE_PROJECT_commit: ${{ github.sha }}
  ORG_GRADLE_PROJECT_attempt: ${{ github.run_attempt }}

jobs:

  deploy-multiplatform:
    runs-on: ubuntu-latest
    outputs:
      release_version: ${{ steps.output_version.outputs.snapshot_version }}
    steps:
      - uses: actions/checkout@v3
      - name: Gradle Cache Setup
        uses: gradle/gradle-build-action@v2.4.2
        with:
          cache-read-only: ${{ github.ref != 'refs/heads/dev' }}
      - name: Gradle Sync
        run: ./gradlew
      - name: Add Sdk Version to Env
        run: |
          snapshot_version=$(./gradlew printSdkVersion -q)
          echo "snapshot_version=$snapshot_version" >> $GITHUB_ENV
      - name: Publish ${{ env.snapshot_version }}
        run: ./gradlew publishKotlinMultiplatformPublicationToMeetacySdkRepository
      - name: Add Sdk Version to Output
        id: output_version
        run: echo "snapshot_version=${{ env.snapshot_version }}" >> $GITHUB_OUTPUT

  deploy-jvm:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Gradle Cache Setup
        uses: gradle/gradle-build-action@v2.4.2
        with:
          cache-read-only: ${{ github.ref != 'refs/heads/dev' }}
      - name: Gradle Sync
        run: ./gradlew
      - name: Add Sdk Version to Env
        run: |
          snapshot_version=$(./gradlew printSdkVersion -q)
          echo "snapshot_version=$snapshot_version" >> $GITHUB_ENV
      - name: Publish ${{ env.snapshot_version }}
        run: ./gradlew publishJvmPublicationToMeetacySdkRepository

  deploy-js:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Gradle Cache Setup
        uses: gradle/gradle-build-action@v2.4.2
        with:
          cache-read-only: ${{ github.ref != 'refs/heads/dev' }}
      - name: Gradle Sync
        run: ./gradlew
      - name: Add Sdk Version to Env
        run: |
          snapshot_version=$(./gradlew printSdkVersion -q)
          echo "snapshot_version=$snapshot_version" >> $GITHUB_ENV
      - name: Publish ${{ env.snapshot_version }}
        run: ./gradlew publishJsPublicationToMeetacySdkRepository

  deploy-konan:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: Gradle Cache Setup
        uses: gradle/gradle-build-action@v2.4.2
        with:
          cache-read-only: ${{ github.ref != 'refs/heads/dev' }}
      - name: Konan Cache Setup
        uses: actions/cache@v3
        with:
          path: ~/.konan
          key: konan-cache
      - name: Gradle Sync
        run: ./gradlew
      - name: Add Sdk Version to Env
        run: |
          snapshot_version=$(./gradlew printSdkVersion -q)
          echo "snapshot_version=$snapshot_version" >> $GITHUB_ENV
      - name: Publish ${{ env.snapshot_version }}
        run: |
          ./gradlew publishIosX64PublicationToMeetacySdkRepository \
                    publishIosSimulatorArm64PublicationToMeetacySdkRepository \
                    publishIosArm64PublicationToMeetacySdkRepository

  create-release:
    runs-on: ubuntu-latest
    needs:
      - deploy-multiplatform
      - deploy-jvm
      - deploy-js
      - deploy-konan
    steps:
      - name: Create Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ needs.deploy-multiplatform.outputs.snapshot_version }}
          release_name: Build ${{ needs.deploy-multiplatform.outputs.snapshot_version }}
          prerelease: true
