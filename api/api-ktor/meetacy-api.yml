openapi: "3.0.3"
info:
  title: "Meetacy Backend API"
  description: "_Version 1.0.2 of the `Meetacy` API documentation_. It is recommended to fill in the request body on your own according to the sample provided below. The `Notifications` section is under development. "
  version: "1.0.2"
servers:
  - url: "https://api.meetacy.app"
  - url: "http://localhost:8080"
tags:
  - name: auth
    description: Authorization and confirmation of mail
  - name: files
    description: Operations about files
  - name: friends
    description: Operations about friends
  - name: meetings
    description: Operations about meetings
  - name: notifications
    description: THIS PART IS NOT CONFIGURED YET
  - name: user
    description: Operations about user
  - name: invitations
    description: Operations about invitations

paths:
  /auth/email/confirm:
    post:
      parameters:
        - name: Api-Version
          in: header
          description: The version of API to invoke request with
          required: true
          schema:
            type: string
      tags:
        - auth
      summary: Email confirmation
      description: "Email confirmation [via gmail, not implemented yet]"
      requestBody:
        description: response with an token
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailConfirmRequest'
      responses:
        "200":
          description: An example of a successful generated response with an token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusTrueResponse'
        "400":
          description: An example of a successful generated response with an token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResponse'
              examples:
                ExpiredLink:
                  $ref: '#/components/examples/ExpiredLink'
                InvalidLink:
                  $ref: '#/components/examples/InvalidLink'
                LinkMaxAttemptsReached:
                  $ref: '#/components/examples/LinkMaxAttemptsReached'
  /auth/email/link:
    parameters:
      - name: Api-Version
        in: header
        description: The version of API to invoke request with
        required: true
        schema:
          type: string
    post:
      tags:
        - auth
      summary: Email linking
      description: "Linking email to account"
      requestBody:
        description: response with an token
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailLinkRequest'
      responses:
        "200":
          description: An example of a successful generated response with an token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusTrueResponse'
        "400":
          description: An example of a successful generated response with an token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResponse'
  /auth/generate:
    parameters:
      - name: Api-Version
        in: header
        description: The version of API to invoke request with
        required: true
        schema:
          type: string
    post:
      tags:
        - auth
      summary: token creation
      description: Created token for user
      requestBody:
        description: Creation token based on nickname
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateIdentityRequest'
      responses:
        "200":
          description: An example of a successful generated response with an token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateIdentityResponse'
        "400":
          description: An example of a successful generated response with an token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResponse'
              example:
                status: false
                errorCode: 1
                errorMessage: "Please provide a valid nickname"
  /files/download:
    parameters:
      - name: Api-Version
        in: header
        description: The version of API to invoke request with
        required: true
        schema:
          type: string
    get:
      summary: Download file from server
      tags:
        - files
      description: "Getting streaming data from the server by fileId"
      parameters:
        - name: "fileId"
          in: "query"
          required: true
          schema:
            type: string
      responses:
        "200":
          description: An example of a successful generated response with an token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DownloadFileSuccessfulResponse'
        "400":
          description: An example of a successful generated response with an token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResponse'
              example:
                status: false
                errorCode: 1
                errorMessage: "Please provide a valid fileId"
  /files/upload:
    parameters:
      - name: Api-Version
        in: header
        description: The version of API to invoke request with
        required: true
        schema:
          type: string
    post:
      summary: Uploading a file to the server
      tags:
        - files
      description: "Uploading streaming data to the server. Load Type--MultiPart Data"
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties: # Request parts
                token:
                  type: string
                file:
                  type: string
                  format: binary
              required:
                - "token"
                - "file"
            encoding: # The same level as schema
              profileImage: # Property name (see above)
                contentType: image/png, image/jpeg
      responses:
        "200":
          description: An example of a successful generated response with an token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateIdentityResponse'
        "400":
          description: An example of a successful generated response with an token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResponse'
              examples:
                InvalidIdentity:
                  $ref: '#/components/examples/InvalidToken'
                LimitSize:
                  $ref: '#/components/examples/FileSizeLimit'
  /friends/add:
    parameters:
      - name: Api-Version
        in: header
        description: The version of API to invoke request with
        required: true
        schema:
          type: string
    post:
      tags:
        - friends
      summary: "Add friend"
      description: "User subscription. With a mutual subscription, he becomes a friend"
      requestBody:
        description: response with an token
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessFriendRequest'
      responses:
        "200":
          description: An example of a successful generated response with an token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusTrueResponse'
        "400":
          description: An example of a successful generated response with an token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResponse'
              examples:
                InvalidIdentity:
                  $ref: '#/components/examples/InvalidToken'
                FriendNotFound:
                  $ref: '#/components/examples/FriendNotFound'
                FriendAlreadyAdded:
                  $ref: '#/components/examples/FriendAlreadyAdded'
  /friends/delete:
    parameters:
      - name: Api-Version
        in: header
        description: The version of API to invoke request with
        required: true
        schema:
          type: string
    post:
      summary: Delete friend
      tags:
        - friends
      description: "Unsubscribing from a user, as a result of which he ceases to be your friend"
      requestBody:
        description: Creation token based on nickname
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessFriendRequest'
      responses:
        "200":
          description: An example of a successful generated response with an token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusTrueResponse'
        "400":
          description: An example of a successful generated response with an token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResponse'
              examples:
                InvalidIdentity:
                  $ref: '#/components/examples/InvalidToken'
                FriendNotFound:
                  $ref: '#/components/examples/FriendNotFound'
  /friends/list:
    parameters:
      - name: Api-Version
        in: header
        description: The version of API to invoke request with
        required: true
        schema:
          type: string
    post:
      summary: Get list of friends
      tags:
        - friends
      description: "Getting a list of friends and those you follow"
      requestBody:
        description: Creation token based on nickname
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListFriendsRequest'
      responses:
        "200":
          description: An example of a successful generated response with an token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFriendsResponse'
        "400":
          description: An example of a successful generated response with an token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResponse'
  /invitations/create:
    parameters:
      - name: Api-Version
        in: header
        description: The version of API to invoke request with
        required: true
        schema:
          type: string
    post:
      summary: Create an invitation
      tags:
        - invitations
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateInvitationRequest"
      responses:
        "200":
          description: Example of a successful created invitation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateInvitationResponse'
        "400":
          description: Example of failed invitation creation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidResponse"
              examples:
                InvalidAccessIdentity:
                  $ref: '#/components/examples/InvalidToken'
                FriendNotFound:
                  $ref: '#/components/examples/FriendNotFound'
  /invitations/accept:
    description: Accept an invitation
    parameters:
      - name: Api-Version
        in: header
        description: The version of API to invoke request with
        required: true
        schema:
          type: string
    post:
      summary: Accept an invitation
      tags:
        - invitations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcceptInvitationRequest'
      responses:
        "200":
          description: Example of a successful invitation acceptation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusTrueResponse'
              examples:
                Success:
                  $ref: '#/components/schemas/StatusTrueResponse'
        "400":
          description: Example of failed invitation acceptation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResponse'
              examples:
                InvalidAccessIdentity:
                  $ref: '#/components/examples/InvalidToken'
  /invitations/cancel:
    description: Cancel an invitation
    parameters:
      - name: Api-Version
        in: header
        description: The version of API to invoke request with
        required: true
        schema:
          type: string
    post:
      summary: Cancel an invitation
      tags:
        - invitations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelInvitationRequest'
      responses:
        "200":
          description: Example of a successful invitation cancellation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusTrueResponse'
              examples:
                Success:
                  $ref: '#/components/schemas/StatusTrueResponse'
        "400":
          description: Example of failed invitation cancellation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResponse'
              examples:
                InvalidAccessIdentity:
                  $ref: '#/components/examples/InvalidToken'
  /invitations/deny:
    description: Deny an invitation
    parameters:
      - name: Api-Version
        in: header
        description: The version of API to invoke request with
        required: true
        schema:
          type: string
    post:
      summary: Deny an invitation
      tags:
        - invitations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DenyInvitationRequest'
      responses:
        "200":
          description: Example of a successful invitation denying
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusTrueResponse'
              examples:
                Success:
                  $ref: '#/components/schemas/StatusTrueResponse'
        "400":
          description: Example of failed invitation denying
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResponse'
              examples:
                InvalidAccessIdentity:
                  $ref: '#/components/examples/InvalidToken'
  /meetings/edit:
    parameters:
      - name: Api-Version
        in: header
        description: The version of API to invoke request with
        required: true
        schema:
          type: string
    post:
      summary: Edit parameters in meeting
      tags:
        - meetings
      description: "Edit avatar, title, description etc"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditMeetingRequest'
      responses:
        "200":
          description: An example of a successful generated response with an token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EditMeetingResponse'
        "400":
          description: An example of a successful generated response with an token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResponse'
              examples:
                InvalidAccessIdentity:
                  $ref: '#/components/examples/InvalidToken'
                InvalidUtf8String:
                  $ref: '#/components/examples/InvalidNickname'
                InvalidAvatarIdentity:
                  $ref: '#/components/examples/InvalidFileId'
                InvalidMeetingId:
                  $ref:  '#/components/examples/InvalidMeetingId'
                NullEditParameters:
                  $ref: '#/components/examples/NullEditParameters'
  /meetings/create:
    parameters:
      - name: Api-Version
        in: header
        description: The version of API to invoke request with
        required: true
        schema:
          type: string
    post:
      summary: Creating a meeting
      tags:
        - meetings
      description: "Creating a meeting with an token, name, description, date and location"
      requestBody:
        description: response with an token
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMeetingRequest'
      responses:
        "200":
          description: An example of a successful generated response with an token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateMeetingResponse'
        "400":
          description: An example of a successful generated response with an token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResponse'
              examples:
                InvalidAccessIdentity:
                  $ref: '#/components/examples/InvalidToken'
                InvalidUtf8String:
                  $ref: '#/components/examples/InvalidNickname'
  /meetings/delete:
    parameters:
      - name: Api-Version
        in: header
        description: The version of API to invoke request with
        required: true
        schema:
          type: string
    post:
      summary: Deleting a meeting
      tags:
        - meetings
      description: "Removing a meeting from the database"
      requestBody:
        description: response with an token
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessMeetingIdRequest'
      responses:
        "200":
          description: An example of a successful generated response with an token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusTrueResponse'
        "400":
          description: An example of a successful generated response with an token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResponse'
              examples:
                InvalidAccessIdentity:
                  $ref: '#/components/examples/InvalidToken'
                MeetingNotFound:
                  $ref: '#/components/examples/InvalidMeetingId'
  /meetings/get:
    parameters:
      - name: Api-Version
        in: header
        description: The version of API to invoke request with
        required: true
        schema:
          type: string
    post:
      summary: Getting meeting information
      tags:
        - meetings
      description: "Getting information about a meeting object"
      requestBody:
        description: response with an token
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessMeetingIdRequest'
      responses:
        "200":
          description: An example of a successful generated response with an token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateMeetingResponse'
        "400":
          description: An example of a successful generated response with an token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResponse'
              examples:
                InvalidAccessIdentity:
                  $ref: '#/components/examples/InvalidToken'
                MeetingNotFound:
                  $ref: '#/components/examples/InvalidMeetingId'
  /meetings/history/list:
    parameters:
      - name: Api-Version
        in: header
        description: The version of API to invoke request with
        required: true
        schema:
          type: string
    post:
      summary: Getting a list of meetings
      tags:
        - meetings
      description: "Getting a list of meetings by token"
      requestBody:
        description: response with an token
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListMeetingsRequest'
      responses:
        "200":
          description: An example of a successful generated response with an token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMeetingsResponse'
        "400":
          description: An example of a successful generated response with an token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResponse'
              examples:
                InvalidAccessIdentity:
                  $ref: '#/components/examples/InvalidToken'
  /meetings/history/active:
    parameters:
      - name: Api-Version
        in: header
        description: The version of API to invoke request with
        required: true
        schema:
          type: string
    get:
      summary: Getting a list of active meetings
      tags:
        - meetings
      description: "Getting a list of meetings by token"
      requestBody:
        description: response with an token
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListMeetingsRequest'
      responses:
        "200":
          description: An example of a successful generated response with an token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMeetingsResponse'
        "400":
          description: An example of a successful generated response with an token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResponse'
              examples:
                InvalidAccessIdentity:
                  $ref: '#/components/examples/InvalidToken'
  /meetings/history/past:
    parameters:
      - name: Api-Version
        in: header
        description: The version of API to invoke request with
        required: true
        schema:
          type: string
    get:
      summary: Getting a list of active meetings
      tags:
        - meetings
      description: "Getting a list of meetings by token"
      requestBody:
        description: response with an token
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListMeetingsRequest'
      responses:
        "200":
          description: An example of a successful generated response with an token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMeetingsResponse'
        "400":
          description: An example of a successful generated response with an token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResponse'
              examples:
                InvalidAccessIdentity:
                  $ref: '#/components/examples/InvalidToken'
  /meetings/map/list:
    parameters:
      - name: Api-Version
        in: header
        description: The version of API to invoke request with
        required: true
        schema:
          type: string
    post:
      summary: "Meetings on Map"
      tags:
        - meetings
      description: "Get a list of meetings that should be displayed on the map"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListMapMeetingsRequest'
      responses:
        "200":
          description: "An example of successful returned meetings for map"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMapMeetingsResponse'
        "400":
          description: "An example of failed authorization"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResponse'
              examples:
                InvalidAccessIdentity:
                  $ref: '#/components/examples/InvalidToken'
  /meetings/participants/list:
    parameters:
      - name: Api-Version
        in: header
        description: The version of API to invoke request with
        required: true
        schema:
          type: string
    post:
      summary: Participate meeting
      tags:
        - meetings
      description: "Taking part in a meeting"
      requestBody:
        description: response with an token
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListMeetingParticipantsRequest'
      responses:
        "200":
          description: An example of a successful generated response with an token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMeetingParticipantsResponse'
        "400":
          description: An example of a successful generated response with an token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResponse'
              examples:
                InvalidAccessIdentity:
                  $ref: '#/components/examples/InvalidToken'
                MeetingNotFound:
                  $ref: '#/components/examples/InvalidMeetingId'
  /meetings/participate:
    parameters:
      - name: Api-Version
        in: header
        description: The version of API to invoke request with
        required: true
        schema:
          type: string
    post:
      summary: Participate meeting
      tags:
        - meetings
      description: "Taking part in a meeting"
      requestBody:
        description: response with an token
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessMeetingIdRequest'
      responses:
        "200":
          description: An example of a successful generated response with an token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusTrueResponse'
        "400":
          description: An example of a successful generated response with an token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResponse'
              examples:
                InvalidAccessIdentity:
                  $ref: '#/components/examples/InvalidToken'
                MeetingNotFound:
                  $ref: '#/components/examples/InvalidMeetingId'
                MeetingAlreadyParticipate:
                  $ref: '#/components/examples/MeetingAlreadyParticipate'
  /notifications/list:
    parameters:
      - name: Api-Version
        in: header
        description: The version of API to invoke request with
        required: true
        schema:
          type: string
    post:
      summary: "List past notifications"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListNotificationsRequest'
      tags:
        - notifications
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListNotificationsResponse"
        "400":
          description: An example of a successful generated response with an token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResponse'
              examples:
                InvalidAccessIdentity:
                  $ref: '#/components/examples/InvalidToken'
  /notifications/read:
    parameters:
      - name: Api-Version
        in: header
        description: The version of API to invoke request with
        required: true
        schema:
          type: string
    post:
      tags:
        - notifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReadNotificationRequest"
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StatusTrueResponse"
        "400":
          description: An example of a successful generated response with an token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResponse'
              examples:
                InvalidAccessIdentity:
                  $ref: '#/components/examples/InvalidToken'
                LastNotificationIdInvalid:
                  $ref: '#/components/examples/LastNotificationIdInvalid'
  /users/get:
    parameters:
      - name: Api-Version
        in: header
        description: The version of API to invoke request with
        required: true
        schema:
          type: string
    post:
      summary: Getting user object
      tags:
        - user
      description: "Getting user data. Nickname, Id [not to be confused with token] and email verification status"
      requestBody:
        description: Body for get user or me
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetUserRequest'
      responses:
        "200":
          description: An example of a successful generated response with an token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserResponse'
              examples:
                id:
                  value:
                    id: "15:fzK6CgXqQihDqeXpVYqVpOIgH0s5HvBAaR2BN2PkCxsLe63fAwMrV4uDInfYgoKFXY5C18Rnu9I2x5d46qmGNPLTM9uDepdKPKo7ss1tPsMk5AbslGwQCjlBrscOJmxUFSt7iwsmbZdLdjgYecKoXrJBVGwkZC3HYBUCLtgkexYsOk1mmDRxk482k3fCuo2Nxnjy82INdkOTjVsnew6vGhtOOrOWdpR1Ci6v1d06SQ6aFqs5QasWiTEPXNyCjGGd"
                    nickname: Dmytro Koriukivka
                    email: null
                    emailVerified: null
                token:
                  value:
                    token: "15:fzK6CgXqQihDqeXpVYqVpOIgH0s5HvBAaR2BN2PkCxsLe63fAwMrV4uDInfYgoKFXY5C18Rnu9I2x5d46qmGNPLTM9uDepdKPKo7ss1tPsMk5AbslGwQCjlBrscOJmxUFSt7iwsmbZdLdjgYecKoXrJBVGwkZC3HYBUCLtgkexYsOk1mmDRxk482k3fCuo2Nxnjy82INdkOTjVsnew6vGhtOOrOWdpR1Ci6v1d06SQ6aFqs5QasWiTEPXNyCjGGd"
                    nickname: Dmytro Koriukivka
                    email: DmytroKoriukivka@meetacy.app
                    emailVerified: true
        "400":
          description: An example of a successful generated response with an token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResponse'
              examples:
                InvalidUtf8String:
                  $ref: '#/components/examples/InvalidUtf8String'
                UserNotFound:
                  $ref: '#/components/examples/UserNotFound'
  /users/edit:
    parameters:
      - name: Api-Version
        in: header
        description: The version of API to invoke request with
        required: true
        schema:
          type: string
    post:
      summary: Editing user object
      tags:
        - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditUserRequest'
      responses:
        "200":
          description: An example of a successful generated response with an token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EditUserRequest'
              example:
                value:
                  token: "15:fzK6CgXqQihDqeXpVYqVpOIgH0s5HvBAaR2BN2PkCxsLe63fAwMrV4uDInfYgoKFXY5C18Rnu9I2x5d46qmGNPLTM9uDepdKPKo7ss1tPsMk5AbslGwQCjlBrscOJmxUFSt7iwsmbZdLdjgYecKoXrJBVGwkZC3HYBUCLtgkexYsOk1mmDRxk482k3fCuo2Nxnjy82INdkOTjVsnew6vGhtOOrOWdpR1Ci6v1d06SQ6aFqs5QasWiTEPXNyCjGGd"
                  nickname: Dmytro Koriukivka
                  email: DmytroKoriukivka@meetacy.app
                  emailVerified: true
        "400":
          description: An example of a successful generated response with an token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResponse'
              examples:
                InvalidAccessIdentity:
                  $ref: '#/components/examples/InvalidToken'
                InvalidAvatarIdentity:
                  $ref: '#/components/examples/InvalidFileId'
                InvalidUtf8String:
                  $ref: '#/components/examples/InvalidUtf8String'
                UsernameAlreadyOccupied:
                  $ref: '#/components/examples/UsernameAlreadyOccupied'
                NullEditParameters:
                  $ref: '#/components/examples/NullEditParameters'
  /users/username/validate:
    parameters:
      - name: Api-Version
        in: header
        description: The version of API to invoke request with
        required: true
        schema:
          type: string
    post:
      summary: Validating a username
      tags:
        - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ValidateUsernameRequest"
      responses:
        "200":
          description: An example of a passed validation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidateUsernameResponse"
        "400":
          description: Failed verification example
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResponse'
              examples:
                InvalidUtf8String:
                  $ref: '#/components/examples/InvalidUtf8String'
                UsernameAlreadyOccupied:
                  $ref: '#/components/examples/UsernameAlreadyOccupied'

components:
  examples:
    ExpiredLink:
      value:
        status: false
        errorCode: 12
        errorMessage: "This link was expired. Please consider to create a new one"
    InvalidLink:
      value:
        status: false
        errorCode: 4
        errorMessage: "This link is invalid. Please consider to create a new one"
    LinkMaxAttemptsReached:
      value:
        status: false
        errorCode: 13
        errorMessage: "You have reached max attempts for today. Please try again later"
    InvalidToken:
      value:
        status: false
        errorCode: 1
        errorMessage: "Please provide a valid token"
    InvalidNickname:
      value:
        status: false
        errorCode: 16
        errorMessage: "Please provide a valid nickname"
    UsernameAlreadyOccupied:
      value:
        status: false
        errorCode: 6
        errorMessage: "Username already occupied. Please provide another username."
    NullEditParameters:
      value:
        status: false
        errorCode: 10
        errorMessage: "Specify at least one meeting edit parameter"
    InvalidFileId:
      value:
        status: false
        errorCode: 3
        errorMessage: "Please provide a valid fileId"
    FileSizeLimit:
      value:
        status: false
        errorCode: 14
        errorMessage: "You have exceed your storage limit (max: 1857660, now: 117857600)"
    FriendNotFound:
      value:
        status: false
        errorCode: 7
        errorMessage: "Friend was not found"
    FriendAlreadyAdded:
      value:
        status: false
        errorCode: 11
        errorMessage: "Friend already added"
    InvalidMeetingId:
      value:
        status: false
        errorCode: 2
        errorMessage: "Please provide a valid meetingId"
    MeetingAlreadyParticipate:
      value:
        status: false
        errorCode: 9
        errorMessage: "You are already participating in this meeting"
    LastNotificationIdInvalid:
      value:
        status: false
        errorCode: 5
        errorMessage: "Please provide a valid notification id"
    UserNotFound:
      value:
        status: false
        errorCode: 8
        errorMessage: "FullUser not found"
    InvalidUtf8String:
      value:
        status: false
        errorCode: 16
        errorMessage: "Please provide a valid string"
  schemas:
    GenerateIdentityRequest:
      type: "object"
      properties:
        nickname:
          type: "string"
          example: "John"
      required:
        - "nickname"
      additionalProperties: false
    GenerateIdentityResponse:
      type: "object"
      properties:
        status:
          type: "boolean"
          example: true
        result:
          type: "string"
          example: "1:Nf7knMA3Oj3cAgrFjLSZEm7iIkyJbHxalO3c224qKsm8Sod01jnWPGlV7zGokTAgMpvhzOKSpZYx8WFE0ABlgf9DGxE8cqqvvovonRpfnl3TXQXmPNMemIfgGuvhvQsLKLEpTpflOT7be3VyeQWzLHjZQtlVgB6eeEaL4OlI1etzBY4z2jMyQKr89BFo9ztcXEVycDUVvI2m62sWS1NIQyKZXOWXYsxocJ4O1L2WB3y0EW8r7uTmosK4lCXTlka6"
      required:
        - "status"
        - "result"
      additionalProperties: false
    AccessMeetingIdRequest:
      type: "object"
      properties:
        token:
          type: string
          example: "14:BtEpi2o77Uia9NvwQqbumtNggJzjlEVS5gTS1Z8SDs9BmXk7E8lGxji5MBHxcor0j9X1tMgTjiYwbVvuqjdhkdDTr4XtZY6lFhURbKYG17LlfgqPVi6xJpoAdwQyxLz6wILAaiJdBy3wK1PZ3t0Zg3oBGeyeKJtfestgJylmEMCBjH7eXkBP9Bi93xkV4u68kB4OBKPesxJrTpUHlQjwuP8bCpj8Q591BUdUm9t9dXR4xSksMKWWWe4t4Y4ZrAfA"
        meetingId:
          type: string
          example: "8:wtzbOPJqX8SVCDQj4UMavNoKJId5UylyL4GRZAkacc2PcGnyu8TCqZCLYvFnG4kb75HOVz6TIeRxXbarsdQZBdrB1rDbHSGD7yCW0EOTbRhxs5qRGncOjG5DmTrAULbWlWMiUkt2RiDRNTkoGJunQgtP63FEZ1MrYJPPdyX1Qn3xpIW6joZZ5p2XahuGGAE13UceQYz6bWO5ZWSJiWjwrA0xOvqf6ad0FHuEXcQaWbJBbBfEA9oGm4KsDHfnkvCT"
      required:
        - "token"
        - "meetingId"
      additionalProperties: false
    ListMeetingParticipantsRequest:
      type: "object"
      properties:
        token:
          type: string
        meetingId:
          type: string
        amount:
          type: integer
          example: 10
        pagingId:
          type: string
      required:
        - "token"
        - "meetingId"
        - "amount"
      additionalProperties: false
    ListMeetingParticipantsResponse:
      type: "object"
      properties:
        status:
          type: boolean
          example: true
        result:
          type: object
          properties:
            nextPagingId:
              type: string
            data:
              type: array
              items:
                $ref: '#/components/schemas/User'
          required:
            - "data"
      required:
        - "result"
        - "status"
      additionalProperties: false
    ListMapMeetingsRequest:
      type: object
      properties:
        token:
          type: string
          example:
            - "14:BtEpi2o77Uia9NvwQqbumtNggJzjlEVS5gTS1Z8SDs9BmXk7E8lGxji5MBHxcor0j9X1tMgTjiYwbVvuqjdhkdDTr4XtZY6lFhURbKYG17LlfgqPVi6xJpoAdwQyxLz6wILAaiJdBy3wK1PZ3t0Zg3oBGeyeKJtfestgJylmEMCBjH7eXkBP9Bi93xkV4u68kB4OBKPesxJrTpUHlQjwuP8bCpj8Q591BUdUm9t9dXR4xSksMKWWWe4t4Y4ZrAfA"
        location:
          $ref: '#/components/schemas/Location'
      required:
        - "token"
        - "location"
    TokenRequest:
      type: object
      properties:
        token:
          type: string
          example:
            - "14:BtEpi2o77Uia9NvwQqbumtNggJzjlEVS5gTS1Z8SDs9BmXk7E8lGxji5MBHxcor0j9X1tMgTjiYwbVvuqjdhkdDTr4XtZY6lFhURbKYG17LlfgqPVi6xJpoAdwQyxLz6wILAaiJdBy3wK1PZ3t0Zg3oBGeyeKJtfestgJylmEMCBjH7eXkBP9Bi93xkV4u68kB4OBKPesxJrTpUHlQjwuP8bCpj8Q591BUdUm9t9dXR4xSksMKWWWe4t4Y4ZrAfA"
      required:
        - "properties"
    AccessIdentityRequest:
      type: "object"
      properties:
        accessIdentity:
          type: string
          example:
            - "14:BtEpi2o77Uia9NvwQqbumtNggJzjlEVS5gTS1Z8SDs9BmXk7E8lGxji5MBHxcor0j9X1tMgTjiYwbVvuqjdhkdDTr4XtZY6lFhURbKYG17LlfgqPVi6xJpoAdwQyxLz6wILAaiJdBy3wK1PZ3t0Zg3oBGeyeKJtfestgJylmEMCBjH7eXkBP9Bi93xkV4u68kB4OBKPesxJrTpUHlQjwuP8bCpj8Q591BUdUm9t9dXR4xSksMKWWWe4t4Y4ZrAfA"
      required:
        - "accessIdentity"
      additionalProperties: false
    IdentityRequest:
      type: object
      properties:
        id:
          type: string
          example:
            - "46:QTZepulLdiPsDLNNjinSQ8HJeyidzrdMrYATwD5fmb080VGxzQCUXRubsbxx8DqhojU2y80LiXXBT1N0FQhZZ3rYNTqQZoaDJDYRM31Qd3ugkzBV7QWwtCdAjQ2AxZAAukUCgvwiy2wGmuxSlXhME224gPXRq53WqlFVjMDsAZiIo9HGr0qmclO2EZUPRVlyd5plu83UApbIrOVHeXksq1NbSXxloAhDq6iK9C2Ck8BNoZS8wQWsXdCXBqnPVb85"
        token:
          type: string
          example:
            - "14:BtEpi2o77Uia9NvwQqbumtNggJzjlEVS5gTS1Z8SDs9BmXk7E8lGxji5MBHxcor0j9X1tMgTjiYwbVvuqjdhkdDTr4XtZY6lFhURbKYG17LlfgqPVi6xJpoAdwQyxLz6wILAaiJdBy3wK1PZ3t0Zg3oBGeyeKJtfestgJylmEMCBjH7eXkBP9Bi93xkV4u68kB4OBKPesxJrTpUHlQjwuP8bCpj8Q591BUdUm9t9dXR4xSksMKWWWe4t4Y4ZrAfA"
      required:
        - "token"
        - "id"
      additionalProperties: false
    AccessFriendRequest:
      type: "object"
      properties:
        token:
          type: string
          example: "4:Nf7knMA3Oj3cAgrFjLSZEm7iIkyJbHxalO3c224qKsm8Sod01jnWPGlV7zGokTAgMpvhzOKSpZYx8WFE0ABlgf9DGxE8cqqvvovonRpfnl3TXQXmPNMemIfgGuvhvQsLKLEpTpflOT7be3VyeQWzLHjZQtlVgB6eeEaL4OlI1etzBY4z2jMyQKr89BFo9ztcXEVycDUVvI2m62sWS1NIQyKZXOWXYsxocJ4O1L2WB3y0EW8r7uTmosK4lCXTlka6"
        friendId:
          type: string
          example: "5:PjvgzvEu2YsHIm5OP4L0apfqtQV9Ck9I02ZuhJxDqJ4VeS9SwQJGpBRV0QhvbaDJjsTaMZRVRzsM3yn9uSvBffdY1ul9k3J7IDgWqgbQXHlI0quTL0ORJAUONHzzRfLHs6sOmTAf7AlRP4AmGu9aqwN6hALE9MeDITcY3LlNJR6HPE5z3SK1aE5OC2YKpjhX0xQLBQd6wlkdeoCPhyJRevx60u1T1kVIhpnjBLyXQZwbHYGPCIVJ5ryeVByQCQI8"
      required:
        - "token"
        - "friendId"
      additionalProperties: false
    ListFriendsRequest:
      type: "object"
      properties:
        token:
          type: string
          example: "6:47ioG3IwdRg9PmEAVsG8B54Ka742J5KDpVl1T8NZ5RkAskxhfpCmeRG1USNswsors49wcpR5Iw5YFxKmLghKddzQSDGKM6KanFa1pzETfmxMHN5EqHZACkeHvvytOxjCprZGWvJSjKRkiHLrnXxc1LAYQOhoN4iojsH4QJH0LmP295TfyZgchhTZx9kZ6O0D9x116DWbj5yO6KJrklUz0R0ND0XEvnOZi8KJcLub3snY0PMCiurQdb0CTZbJV2Dl"
        pagingId:
          type: string
          example: "10"
        amount:
          type: integer
          example: 3
      required:
        - "token"
        - "amount"
    ListMeetingsRequest:
      type: "object"
      properties:
        token:
          type: string
          example: "7:jiNM2w0xhtIxfmBsHiQ8Ai3tkexOA9715hxlmahXLxvnrSJGybv9oMDvJ8PvxHOMJNqgtAVFU7C4VHiDFDyvIPxUux1R1MLJxRF1xK5cJp0B7U0hEHChtkhc1nuIhcIDRt4fFFwcYCGc1ugmd6m8cYeaGev5ZbnffAQua4Bkz3Clu2hjqNWA5Z5tnEoBlvGYrpbYD3YW1KwemrZPqDo58dQh5DDDBrXGXvFo0vkRsgERiW8rUVxl5eEszb2iIgnH"
        pagingId:
          type: string
          example: "8"
        amount:
          type: integer
          example: 3
      required:
        - "token"
        - "amount"
    EmailConfirmRequest:
      type: "object"
      properties:
        email:
          type: string
          example: swagger@meetacy.com
        confirmHash:
          type: string
          example: "67tRo8LLHhCNjmcMLXEmVIj49CYlDjJ39LERann2uzz6qlPa059uqHQ2i8wpJADHcHaLR5orUpIRPSBJyAC7BmspAU9Rzny1V8Z8uYJlzPTnjRPORPgzJzBySAOB2F85hwyEMjD0xZtIuoXbVnZ19lTBbsnq3HInZ47jHZccqWcApByvEkZs3EH4Q6YQSzx4QbMNFtGUScGABgKCAV6uOSNXXzcVve4atPd0HVzlrM2jqfmHt0McNapRExjKpWXx"
      required:
        - "email"
        - "confirmHash"
      additionalProperties: false
    EmailLinkRequest:
      type: "object"
      properties:
        email:
          type: string
          example:
            - "gerald123@gmail.com"
        token:
          type: string
          example:
            - "14:BtEpi2o77Uia9NvwQqbumtNggJzjlEVS5gTS1Z8SDs9BmXk7E8lGxji5MBHxcor0j9X1tMgTjiYwbVvuqjdhkdDTr4XtZY6lFhURbKYG17LlfgqPVi6xJpoAdwQyxLz6wILAaiJdBy3wK1PZ3t0Zg3oBGeyeKJtfestgJylmEMCBjH7eXkBP9Bi93xkV4u68kB4OBKPesxJrTpUHlQjwuP8bCpj8Q591BUdUm9t9dXR4xSksMKWWWe4t4Y4ZrAfA"
      required:
        - "email"
        - "accessIdentity"
      additionalProperties: false
    AccessAvatarRequest:
      type: "object"
      properties:
        accessIdentity:
          type: string
          example:
            - "14:BtEpi2o77Uia9NvwQqbumtNggJzjlEVS5gTS1Z8SDs9BmXk7E8lGxji5MBHxcor0j9X1tMgTjiYwbVvuqjdhkdDTr4XtZY6lFhURbKYG17LlfgqPVi6xJpoAdwQyxLz6wILAaiJdBy3wK1PZ3t0Zg3oBGeyeKJtfestgJylmEMCBjH7eXkBP9Bi93xkV4u68kB4OBKPesxJrTpUHlQjwuP8bCpj8Q591BUdUm9t9dXR4xSksMKWWWe4t4Y4ZrAfA"
        fileIdentity:
          type: string
          example:
            - "14:BtEpi2o77Uia9NvwQqbumtNggJzjlEVS5gTS1Z8SDs9BmXk7E8lGxji5MBHxcor0j9X1tMgTjiYwbVvuqjdhkdDTr4XtZY6lFhURbKYG17LlfgqPVi6xJpoAdwQyxLz6wILAaiJdBy3wK1PZ3t0Zg3oBGeyeKJtfestgJylmEMCBjH7eXkBP9Bi93xkV4u68kB4OBKPesxJrTpUHlQjwuP8bCpj8Q591BUdUm9t9dXR4xSksMKWWWe4t4Y4ZrAfA"
      required:
        - "accessIdentity"
        - "fileIdentityIdentity"
      additionalProperties: false
    CreateMeetingRequest:
      type: "object"
      properties:
        "token":
          type: string
          example:
            "14:BtEpi2o77Uia9NvwQqbumtNggJzjlEVS5gTS1Z8SDs9BmXk7E8lGxji5MBHxcor0j9X1tMgTjiYwbVvuqjdhkdDTr4XtZY6lFhURbKYG17LlfgqPVi6xJpoAdwQyxLz6wILAaiJdBy3wK1PZ3t0Zg3oBGeyeKJtfestgJylmEMCBjH7eXkBP9Bi93xkV4u68kB4OBKPesxJrTpUHlQjwuP8bCpj8Q591BUdUm9t9dXR4xSksMKWWWe4t4Y4ZrAfA"
        "avatarId":
          type: string
          example: "14:BtEpi2o77Uia9NvwQqbumtNggJzjlEVS5gTS1Z8SDs9BmXk7E8lGxji5MBHxcor0j9X1tMgTjiYwbVvuqjdhkdDTr4XtZY6lFhURbKYG17LlfgqPVi6xJpoAdwQyxLz6wILAaiJdBy3wK1PZ3t0Zg3oBGeyeKJtfestgJylmEMCBjH7eXkBP9Bi93xkV4u68kB4OBKPesxJrTpUHlQjwuP8bCpj8Q591BUdUm9t9dXR4xSksMKWWWe4t4Y4ZrAfA"
        "title":
          type: string
          example:
            "Meet on the Elbe"
        "description":
          type: string
          example:
            "Thematic meeting of like-minded people on the Elbe"
        "date":
          type: string
          example:
            20232402T100000+0300
        "location":
          $ref: '#/components/schemas/Location'
        "visibility":
          type: string
          enum:
            - "public"
            - "private"
      required:
        - "token"
        - "title"
        - "date"
        - "location"
        - "visibility"
      additionalProperties: false
    EditMeetingResponse:
      type: object
      properties:
        status:
          type: boolean
          example: true
        result:
          $ref: '#/components/schemas/Meeting'
      required:
        - "status"
        - "result"
    EditMeetingRequest:
      type: "object"
      properties:
        "token":
          type: string
          example:
            "14:BtEpi2o77Uia9NvwQqbumtNggJzjlEVS5gTS1Z8SDs9BmXk7E8lGxji5MBHxcor0j9X1tMgTjiYwbVvuqjdhkdDTr4XtZY6lFhURbKYG17LlfgqPVi6xJpoAdwQyxLz6wILAaiJdBy3wK1PZ3t0Zg3oBGeyeKJtfestgJylmEMCBjH7eXkBP9Bi93xkV4u68kB4OBKPesxJrTpUHlQjwuP8bCpj8Q591BUdUm9t9dXR4xSksMKWWWe4t4Y4ZrAfA"
        "meetingId":
          type: string
          example:
            "8:wtzbOPJqX8SVCDQj4UMavNoKJId5UylyL4GRZAkacc2PcGnyu8TCqZCLYvFnG4kb75HOVz6TIeRxXbarsdQZBdrB1rDbHSGD7yCW0EOTbRhxs5qRGncOjG5DmTrAULbWlWMiUkt2RiDRNTkoGJunQgtP63FEZ1MrYJPPdyX1Qn3xpIW6joZZ5p2XahuGGAE13UceQYz6bWO5ZWSJiWjwrA0xOvqf6ad0FHuEXcQaWbJBbBfEA9oGm4KsDHfnkvCT"
        "avatarId":
          type: string
          example:
            "6:27nUexdZbK0BEn9M48Db9SFP6XTd2O6sjQeX5wsfECftnkVDZ0pP0jYGev23GBGHlQu7RsNk9t8SrO3jOZaiQXbVN22IU5o3TeChCZ2qjgZlOT9owypOBbusAJu16TN0YzIsMtzlgspjOyd5lZzV4LL47QLwcc6b7Z6Uuw0Pkz8IMaCCNdlBBvDaRwsQLqQBLkomRjFOye5owLalAguUHxnjJVSquzDjsljqLwprTPfFGSCGQuqh4JUtWtjUsaWi"
        "title":
          type: string
          example:
            "Meet on the Elbe"
        "description":
          type: string
          example:
            "Thematic meeting of like-minded people on the Elbe"
        "date":
          type: string
          example:
            20232402T100000+0300
        "location":
          $ref: '#/components/schemas/Location'
        "visibility":
          type: string
          enum:
            - "public"
            - "private"
      required:
        - "token"
        - "meetingId"
      additionalProperties: false
    InvalidResponse:
      type: object
      properties:
        status:
          type: boolean
          example: false
        errorCode:
          type: integer
          enum:
            - 1
        errorMessage:
          type: string
          enum:
            - Please provide a valid token
      required:
        - "status"
        - "errorCode"
        - "errorMessage"
      additionalProperties: false
    StatusTrueResponse:
      type: object
      properties:
        status:
          type: boolean
          example: true
      required:
        - "status"
      additionalProperties: false
    DownloadFileSuccessfulResponse:
      type: string
      enum:
        - "*image_file*"
    ListFriendsResponse:
      type: object
      properties:
        status:
          type: boolean
          example:
            - true
        result:
          type: object
          properties:
            nextPagingId:
              type: string
              example: "11"
            data:
              type: array
              items:
                $ref: '#/components/schemas/RegularUserResponse'
          required:
            - "data"
      required:
        - "status"
        - "result"
      additionalProperties: true
    RegularUserResponse:
      allOf:
        - $ref: '#/components/schemas/User'
    CreatorMeetingResponse:
      type: object
      properties:
        id:
          type: string
          example: "12:eKAouJLbWqDmtwQOWuAhi9MYiBYHxKw4LTZBD39nAhtMDiV73QBPDVjE3HRNYm4xwtRJta3FdNdua90evNSgvuvqfyUjdwhXlSlDiEpPE1DJGTzuuAdm5WDowDNJOTdHDpYAGzztJMaKwXiFlguVwO88AZhoByf4SaP9HLXftFs5XVIwNWf4mntyJ48GLaWchngpjvgJW5vABjwwRJiCkCYvMiFpCvwSrzdjwzuvDxM3egDzg15U63yTBSJv0dSo"
        nickname:
          type: string
          example: David Lepaski
        email:
          type: string
          example: "*depending on the privacy settings of the meeting creator, his mail will be displayed*"
        emailVerified:
          type: boolean
          example: false
    Location:
      type: object
      properties:
        latitude:
          type: number
          example: 46.87365231658636
        longitude:
          type: number
          example: 8.256473253864916
      required:
        - "latitude"
        - "longitude"
    Meeting:
      type: object
      properties:
        id:
          type: string
          example: "6:EBnp2woyRmY4snRvZaiEtuOIfk4eEXgWdzy8psVPL60Mz92Ts8qIdaoAHVTpvl9hTygMpfUYjNHJpjwpK0txBKRWl7EqCgmnZjm57pIWnlRIo2WoH856AibK8xmCdgOlENPUsmBGLPa7EVOtd43rnGVdeC3wUfHSNV9PT3S0Q3mXCpHF0tOfssQTnKKbBSy9V19Euo7VzpjS4WXI82ILzPVfLqTaRGEUabXw9issiVZhK97zZhBXrV3CFO26pAZa"
        creator:
          $ref: '#/components/schemas/User'
        date:
          type: string
          example: "20230705T100000+0300"
        location:
          $ref: '#/components/schemas/Location'
        title:
          type: string
          example: Meet on the Elbe
        description:
          type: string
          example: Thematic meeting of like-minded people on the Elbe
        participantsCount:
          type: integer
          example: 13
        previewParticipants:
          type: array
          items:
            $ref: "#/components/schemas/User"
        isParticipating:
          type: boolean
          example: true
        avatarId:
          type: string
        visibility:
          type: string
          enum:
            - "public"
            - "private"
      required:
        - "id"
        - "title"
        - "creator"
        - "date"
        - "location"
        - "participantsCount"
        - "isParticipating"
        - "previewParticipants"
        - "visibility"
    CreateMeetingResponse:
      type: object
      properties:
        status:
          type: boolean
          example: true
        result:
          $ref: '#/components/schemas/Meeting'
      required:
        - "status"
        - "result"
    ListMapMeetingsResponse:
      type: object
      properties:
        status:
          type: boolean
          example: true
        result:
          type: array
          items:
            $ref: '#/components/schemas/Meeting'
      required:
        - "result"
    ListMeetingsResponse:
      type: object
      properties:
        status:
          type: boolean
          example: true
        result:
          type: object
          properties:
            nextPagingId:
              type: string
            data:
              type: array
              items:
                $ref: '#/components/schemas/Meeting'
          required:
            - "data"
      required:
        - "result"
    GetUserResponse:
      type: object
      properties:
        status:
          type: boolean
          example: true
        result:
          $ref: '#/components/schemas/User'
    EditUserResponse:
      type: object
      properties:
        status:
          type: boolean
          example: true
        result:
          $ref: '#/components/schemas/User'
      required:
        - "status"
        - "result"
    User:
      type: object
      properties:
        isSelf:
          type: boolean
          example: false
        id:
          type: string
          example: "15:fzK6CgXqQihDqeXpVYqVpOIgH0s5HvBAaR2BN2PkCxsLe63fAwMrV4uDInfYgoKFXY5C18Rnu9I2x5d46qmGNPLTM9uDepdKPKo7ss1tPsMk5AbslGwQCjlBrscOJmxUFSt7iwsmbZdLdjgYecKoXrJBVGwkZC3HYBUCLtgkexYsOk1mmDRxk482k3fCuo2Nxnjy82INdkOTjVsnew6vGhtOOrOWdpR1Ci6v1d06SQ6aFqs5QasWiTEPXNyCjGGd"
        nickname:
          type: string
          example: Dmytro Koriukivka
        username:
          type: string
          example: username
        email:
          type: string
          example: "*depending on the privacy settings of the user, his mail will be displayed*"
        emailVerified:
          type: boolean
          example: true
        avatarId:
          type: string
          example: "1:rXfskQTJuGm7U0UvDNpojpDhvrwhfkOfPqRlHRwg2R6EMA9aMtp5iZB2t6JLRTxAJp2LhZIIVrmj3uYpjKzji46krsK4GgtG3Uw3TRudeslGdtL4ye2N6LTWRy8WYN1giGOBgRFZLjwQ4hoEdVIJqmmHCRQZNhHpMAsdWUYdoWStgMumTkCTKbXcraZYMpGESqFcaFfstyjCMVZtuXcl23IusOkEzGPcmWy6ykbiHa4D7lhcq4szdSmpksBo2mov"
        relationship:
          type: string
          description: "Relationship field can be one of four types - subscription, subscriber, friend and none. In case if isSelf == true, relationship field is null"
          example: "subscription"
      required:
        - id
        - nickname
        - isSelf
    GetUserRequest:
      description: response with an token
      type: object
      properties:
        id:
          type: string
          example: "8:bqLhYy1hjNTL0wXcN0dnmSeyZDMt2akkGYMDdaa81oc8fPhOHBWTuFWzMdWNqu7gTHHrfhvC64RE2ZEtngYD5YVpOAGz8Nx1ii7l6BxpBCfHgaL6hHzkEqsmuGlea2gijOEZFkDEhebZ9lwkav13DMTdWJUm4GMm0VQgXzX8s3B528XsMxkXiu5ps9JrRB4m2m4vnZHEaskq9SXEGfhxzeuVft4d2eHWlp5V06NPmfhuyehq9J3GwWxYSkN3Doun"
        token:
          type: string
          example: "8:PmP14Ai8NFskTUwjOw0mXjhWIAPECsoYenhp8ECesY1DikwjPXrfk5ZGM8Bue0MGgMF0tWD3iI9TijFAGeDRXltuwREAyGW7AVe4gXfrrIBeVBIuY9lYH3WiO65kzKCmeg5wLEICWzFjjO7j2fQL5OUwQPVm5futMEcJmYo4EGTyDSYEcaVjx5lqMkMWPLN52N9jwTVXAowIvGPqxSJubwrobhz4tQCYi2Gzj4YzLFeSdnTorqdaRGPAs3z10Lge"
      required:
        - token
      additionalProperties: false
    EditUserRequest:
      type: object
      properties:
        token:
          type: string
          example: "9:UjXlL2TeJLWtAoKM1qX6Lv2GjMOvumOzn7Pi9j0q9n28LCCN1WDkFsW7OUi7n2osONPQegFXq9iK3painNnQZeU4J34bBD4DVC5jp4vTK4rdIU28IMEcC0FQdeu3CTbMKXCJWcZXMNIiihJqYOlki5WmjtsWAL84XN0ym1rWFMPrP8yok4jkYAUvPS6APaDU8gHhj5YMARAKdWN4wvTzQ5BbTNrKmmO5d3QdDWNcIH6lGWHPtHXCPjkyFA62iNC5"
        nickname:
          type: string
          example: "Alexander"
        username:
          type: string
          example: "alexSokol"
        avatarId:
          type: string
          example: "1:rXfskQTJuGm7U0UvDNpojpDhvrwhfkOfPqRlHRwg2R6EMA9aMtp5iZB2t6JLRTxAJp2LhZIIVrmj3uYpjKzji46krsK4GgtG3Uw3TRudeslGdtL4ye2N6LTWRy8WYN1giGOBgRFZLjwQ4hoEdVIJqmmHCRQZNhHpMAsdWUYdoWStgMumTkCTKbXcraZYMpGESqFcaFfstyjCMVZtuXcl23IusOkEzGPcmWy6ykbiHa4D7lhcq4szdSmpksBo2mov"
      required:
        - token
    Invitation:
      type: object
      properties:
        identity:
          type: string
        invitedUser:
          $ref: "#/components/schemas/User"
        inviterUser:
          $ref: "#/components/schemas/User"
        meeting:
          $ref: "#/components/schemas/Meeting"
        isAccepted:
          type: boolean
      required:
        - identity
        - expiryDate
        - invitedUser
        - inviterUser
        - meeting
    CreateInvitationRequest:
      type: object
      properties:
        token:
          type: string
        meetingId:
          type: string
          example: "6:EBnp2woyRmY4snRvZaiEtuOIfk4eEXgWdzy8psVPL60Mz92Ts8qIdaoAHVTpvl9hTygMpfUYjNHJpjwpK0txBKRWl7EqCgmnZjm57pIWnlRIo2WoH856AibK8xmCdgOlENPUsmBGLPa7EVOtd43rnGVdeC3wUfHSNV9PT3S0Q3mXCpHF0tOfssQTnKKbBSy9V19Euo7VzpjS4WXI82ILzPVfLqTaRGEUabXw9issiVZhK97zZhBXrV3CFO26pAZa"
        userId:
          type: string
      required:
        - token
        - meetingId
        - userId
    CreateInvitationResponse:
      type: object
      properties:
        status:
          type: boolean
          example: true
        result:
          $ref: '#/components/schemas/Invitation'
      required:
        - "status"
        - "result"
    AcceptInvitationRequest:
      type: object
      properties:
        token:
          type: string
        id:
          type: string
      required:
        - token
        - invitationIdentity
    DenyInvitationRequest:
      type: object
      properties:
        id:
          type: string
        token:
          type: string
      required:
        - "id"
        - "token"
    CancelInvitationRequest:
      type: object
      properties:
        id:
          type: string
        token:
          type: string
      required:
        - "id"
        - "token"
    ReadNotificationRequest:
      type: "object"
      properties:
        token:
          type: string
          example: "7:jiNM2w0xhtIxfmBsHiQ8Ai3tkexOA9715hxlmahXLxvnrSJGybv9oMDvJ8PvxHOMJNqgtAVFU7C4VHiDFDyvIPxUux1R1MLJxRF1xK5cJp0B7U0hEHChtkhc1nuIhcIDRt4fFFwcYCGc1ugmd6m8cYeaGev5ZbnffAQua4Bkz3Clu2hjqNWA5Z5tnEoBlvGYrpbYD3YW1KwemrZPqDo58dQh5DDDBrXGXvFo0vkRsgERiW8rUVxl5eEszb2iIgnH"
        lastNotificationId:
          type: string
          example: "8"
      required:
        - "token"
        - "amount"
    ListNotificationsRequest:
      type: "object"
      properties:
        token:
          type: string
          example: "7:jiNM2w0xhtIxfmBsHiQ8Ai3tkexOA9715hxlmahXLxvnrSJGybv9oMDvJ8PvxHOMJNqgtAVFU7C4VHiDFDyvIPxUux1R1MLJxRF1xK5cJp0B7U0hEHChtkhc1nuIhcIDRt4fFFwcYCGc1ugmd6m8cYeaGev5ZbnffAQua4Bkz3Clu2hjqNWA5Z5tnEoBlvGYrpbYD3YW1KwemrZPqDo58dQh5DDDBrXGXvFo0vkRsgERiW8rUVxl5eEszb2iIgnH"
        pagingId:
          type: string
          example: "8"
        amount:
          type: integer
          example: 3
      required:
        - "token"
        - "amount"
    ListNotificationsResponse:
      type: object
      properties:
        status:
          type: boolean
          example: true
        result:
          type: object
          properties:
            nextPagingId:
              type: string
            data:
              type: array
              items:
                $ref: '#/components/schemas/Notification'
          required:
            - "data"
      required:
        - "result"
    Notification:
      type: object
      properties:
        type:
          type: string
          enum:
            - "subscription"
            - "meeting_invitation"
        id:
          type: string
        isNew:
          type: boolean
        date:
          type: string
        # Subscription
        subscriber:
          $ref: "#/components/schemas/User"
        # Invitation
        meeting:
          $ref: "#/components/schemas/Meeting"
        inviter:
          $ref: "#/components/schemas/User"
      required:
        - "type"
        - "id"
        - "isNew"
        - "date"
    ValidateUsernameRequest:
      type: object
      properties:
        username:
          type: string
      required:
        - username
    ValidateUsernameResponse:
      type: object
      properties:
        status:
          type: boolean
          example: true
        result:
          type: object
          properties:
            username:
              type: string
              example: bpavuk
          required:
            - username
      required:
        - result
        - status
